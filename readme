easy and userfriendly interface

lots of storage space to store the details

ram processing also good

has a good battery backup up to 5hrs

performce very good

The display is great with fhd diplay


https://www.codejava.net/frameworks/spring-boot/spring-boot-crud-example-with-spring-mvc-spring-data-jpa-thymeleaf-hibernate-mysql


<%   
  
String person=${username}
String name=request.getParameter("person");  
  
session.setAttribute("user",name);   
  
%>

<%   
  
String name=(String)session.getAttribute("user");  
out.print("Hello "+name);  
  
%>



https://www.roseindia.net/answers/viewqa/Java-Beginners/19657-how-to-retreive-data-from-database-of-a-particular-user-after-login.html

onclick


crud operation in spring boot with mysql


for(Review r: Review1) {
			ModelMap m = new ModelMap();
			m.put("username", r.getUsername());
			m.put("display", r.getdiplay());
			m.put("performance", r.getperformance());
			m.put("battery", r.getbattery());
			m.put("ram", r.getram());
			m.put("storage", r.getstorage());
			m.put("interfaces", r.getinterfaces());
			model.add(m);
			
		}
@RequestMapping(value="/review1", method = RequestMethod.GET)
	public String review1(ModelMap model, HttpServletRequest request ) {
		List<Review> Review1 = reviewRepo.findAll();
		model.
		request.setAttribute("reviews", Review1);
		return "review1";
	}


<% List rList = (List)request.getAttribute("reviews");%>


<%@taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>

<%@ page language="java" contentType="text/html;%>

<%@ page import="java.util.List"%>
<% List rList = (List)request.getAttribute("reviews");%>




select * from reviews;

DELETE FROM reviews2 WHERE id="17";







